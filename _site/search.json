[
  {
    "objectID": "ParPrac.html",
    "href": "ParPrac.html",
    "title": "ParPrac",
    "section": "",
    "text": "Question 1\n\n\nLoading required package: iterators\n\n\nWarning: package 'iterators' was built under R version 4.4.3\n\n\n\ncl &lt;- makeCluster(detectCores() - 1)  \nregisterDoParallel(cl)\nresults &lt;- foreach(i = 1:100, .combine = rbind) %dopar% {\n    x = rexp(100,rate=1)\n    c(mean=mean(x),var=var(x))\n}\nstopCluster(cl)\nhead(results)\n\n              mean       var\nresult.1 0.9685789 0.7448816\nresult.2 0.8608357 0.6500269\nresult.3 1.0999804 1.1337752\nresult.4 1.0088330 1.1891113\nresult.5 0.9405768 0.7853907\nresult.6 0.8439495 0.5826940\n\n\nQuestion2\n\nlibrary(MASS)\ncl &lt;- makeCluster(detectCores() - 1)  \nregisterDoParallel(cl)\ndf = galaxies\nstart_parallel &lt;- Sys.time()\nB_med &lt;- foreach(i=1:1000, .combine = rbind) %dopar% {\n  x = sample(df,50,replace=T)\n  c(median=median(x))\n}\nend_parallel &lt;- Sys.time()\nstopCluster(cl)\n\n\nstart_seq &lt;- Sys.time()\nB_med &lt;- foreach(i=1:1000, .combine = rbind) %do% {\n  x = sample(df,50,replace=T)\n  c(median=median(x))\n}\nend_seq &lt;- Sys.time()\n\nparallel_time &lt;- end_parallel - start_parallel\nserial_time &lt;- end_seq - start_seq\nparallel_time\n\nTime difference of 0.272161 secs\n\nserial_time\n\nTime difference of 0.2432301 secs\n\n\nQuestion 3\n\ntrue_mean &lt;-  1\n  \ncl &lt;- makeCluster(detectCores() - 1) \nregisterDoParallel(cl)\nresults &lt;- foreach(i = 1:1000, .combine = c) %dopar% {\n  #Generate sample data\n  sample_data &lt;- rexp(50,1)\n    \n  # Bootstrap resampling\n  boot_means &lt;- replicate(1000, mean(sample(sample_data, 50, replace = TRUE)))\n    \n  # Compute Percentile Bootstrap CI\n  ci_lower &lt;- quantile(boot_means, 0.05 / 2)\n  ci_upper &lt;- quantile(boot_means, 1 - 0.05 / 2)\n    \n  # Check if the true mean falls within the CI\n  (true_mean &gt;= ci_lower) & (true_mean &lt;= ci_upper)\n}\nstopCluster(cl)\ncoverage_prob &lt;- mean(results)\ncoverage_prob\n\n[1] 0.937\n\n\nQuestion 4\n\nlibrary(iterators)\nset.seed(1234)\nresult &lt;-  irnorm(n=5, mean = 0, sd = 1)\ncl &lt;- makeCluster(detectCores() - 1) \nregisterDoParallel(cl)\nq4 &lt;- foreach(i=1:3,.combine=rbind) %do%{\n  x=max(nextElem(result))\n  c(x)\n}\nstopCluster(cl)\nprint(q4)\n\n              [,1]\nresult.1 1.0844412\nresult.2 0.5060559\nresult.3 0.9594941\n\n\nQuestion 5\n\nset.seed(1234)\nresult &lt;-  irnorm(n=5, mean = 0, sd = 1)\ncl &lt;- makeCluster(detectCores() - 1) \nregisterDoParallel(cl)\nstartFE &lt;- Sys.time()\nq5a &lt;- foreach(i=1:3,.combine=rbind) %do%{\n  x=max(nextElem(result))\n  c(x)\n}\nstopCluster(cl)\nendFE &lt;- Sys.time()\nForEachTime = startFE-endFE\n\n\nset.seed(1234)\nresult &lt;-  irnorm(n=5, mean = 0, sd = 1)\nstartB &lt;- Sys.time()\nq5b &lt;- replicate(3,{\n  x=max(nextElem(result))\n})\nendB &lt;- Sys.time()\n\nReplicateTime = startB-endB\n\n\nset.seed(1234)\nresult &lt;-  irnorm(n=5, mean = 0, sd = 1)\na1=nextElem(result)\na2=nextElem(result)\na3=nextElem(result)\nL=list(a1,a2,a3)\nfind_max &lt;- function(x) {\n  return(max(x))\n}\ncl &lt;- makeCluster(detectCores() - 1) \nclusterExport(cl, \"find_max\")\nstartC &lt;- Sys.time()\nmax_values &lt;- parLapply(cl, L, find_max)\nendC &lt;- Sys.time()\nstopCluster(cl)\nParLApplyTime = startC-endC\n\n\nForEachTime\n\nTime difference of -0.007983923 secs\n\nReplicateTime\n\nTime difference of -0.002341986 secs\n\nParLApplyTime\n\nTime difference of -0.00355792 secs"
  }
]